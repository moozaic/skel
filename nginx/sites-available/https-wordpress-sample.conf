# SAMPLE HTTPS WORDPRESS

# redirect HTTP to HTTPS
server {
  listen 80;
  server_name domain.com www.domain.com;
  return 301 https://domain.com$request_uri;
}

server {
  listen 443 ssl http2;
  server_name domain.com;
  root /var/www/wordpress;
  index index.php index.html index.htm;

  access_log off; #/var/log/nginx/default_access.log main;
  error_log /var/log/nginx/wordpress_error.log;

  # SSL
  include /etc/nginx/ssl/ocsp-stapling.conf;
  include /etc/nginx/ssl/ciphers.conf;
  include /etc/nginx/ssl/hsts.conf;

  # HEADER (optional)
  include /etc/nginx/snippets/header-secure.conf;

  # STATIC
  include /etc/nginx/snippets/static.conf;

  # ADDITIONAL WORDPRESS (optional)
  include /etc/nginx/snippets/wp-secure.conf;

  # MICROCACHE for WordPress
  set $skip_cache 0;

  if ($request_method ~ ^(HEAD|POST)$) {
      set $skip_cache 1;
  }   

  if ($query_string != "") {
    set $skip_cache 1;
  }   

  if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml") {
    set $skip_cache 1;
  }   

  if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
     set $skip_cache 1;
  }

  add_header X-Cache $upstream_cache_status;


  location / {
    try_files $uri $uri/ /index.php?$args;
  }


  location ~ \.php$ {
    try_files $uri =404;
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    #try_files $fastcgi_script_name =404;
    set $path_info $fastcgi_path_info;
    fastcgi_param PATH_INFO $path_info;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param PHP_VALUE "open_basedir=/var/www/wordpress";
    fastcgi_pass php5;
    fastcgi_cache_bypass $skip_cache;
    fastcgi_no_cache $skip_cache;
    fastcgi_cache microcache;
    fastcgi_cache_valid 200 301 302 60m;
    fastcgi_pass_header Set-Cookie;
    fastcgi_pass_header Cookie;
    fastcgi_ignore_headers Cache-Control Expires Set-Cookie;
  }

  # WP MODULE: nginx helper
  location ~ /purge(/.*) {
    fastcgi_cache_purge microcache "$scheme$request_method$host$1";
  }

  location ~ /\.ht { deny all; }

}
